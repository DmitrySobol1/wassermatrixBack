import cron from 'node-cron';
import { executeCheckTask } from './task.js';

// import { logger } from '../middlewares/error-logger.js'

import dotenv from 'dotenv';
dotenv.config({ path: '/root/wassermatrix/wassermatrixBack/.env' });


//–°—Ü–µ–Ω–∞—Ä–∏–π, –¥–ª—è: 
// –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö –∏—Å—Ç–µ–∫ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏ –º–µ–Ω—è—Ç—å isActive = false
// –ø–æ–∏—Å–∫ –ø–æ –ë–î Promocodes (–æ–±—â–∏–µ)
// –ø–æ–∏—Å–∫ –ø–æ –ë–î PersonalPromocodes (–ª–∏—á–Ω—ã–µ)


cron.schedule(
  '1 0 * * *',
  async () => {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ CRON3 - deactivate expired promocodes', new Date().toISOString());

    try {
      await executeCheckTask();
      console.log('‚úÖ CRON3 –≤—ã–ø–æ–ª–Ω–µ–Ω');
    } catch (err) {
    console.error({
          cron_title: '–û—à–∏–±–∫–∞ –≤ CRON 3 > –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ task.js',
          cron_message: err.message,
          dataFromServer: err.response?.data,
          statusFromServer: err.response?.status,
        });
    }
  },
  {
    scheduled: true,
    timezone: 'UTC',
  }
);

console.log('‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ CRON3 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, check port=',process.env.PORT);
